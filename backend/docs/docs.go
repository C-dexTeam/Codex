// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/attributes/": {
            "post": {
                "description": "Adds Attribute Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attributes"
                ],
                "summary": "Add Attribute",
                "parameters": [
                    {
                        "description": "New Attribute",
                        "name": "newAttribute",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddAttributeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates Attribute Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attributes"
                ],
                "summary": "Update Attribute",
                "parameters": [
                    {
                        "description": "Update Attribute",
                        "name": "updateAttribute",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAttributeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/attributes/{id}": {
            "delete": {
                "description": "Delete an Attribute by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attributes"
                ],
                "summary": "Delete Attribute",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attribute ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/chapters/": {
            "post": {
                "description": "Adds Chapter Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapters"
                ],
                "summary": "Add Chapter",
                "parameters": [
                    {
                        "description": "New Chapter",
                        "name": "newChapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddChapterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates Chapter Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapters"
                ],
                "summary": "Update Chapter",
                "parameters": [
                    {
                        "description": "Update Chapters",
                        "name": "updateChapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateChapterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/chapters/{id}": {
            "delete": {
                "description": "Delete Chapters from DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapters"
                ],
                "summary": "Delete Chapter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chapter ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/courses/": {
            "post": {
                "description": "Adds Course Into DB.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Add Course",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Course Image File",
                        "name": "imageFile",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "languageID",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "programmingLanguageID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "rewardID",
                        "in": "formData"
                    },
                    {
                        "maxLength": 60,
                        "type": "string",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates Course Into DB.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Update Course",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Course Image File",
                        "name": "imageFile",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "languageID",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "programmingLanguageID",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "rewardID",
                        "in": "formData"
                    },
                    {
                        "maxLength": 60,
                        "type": "string",
                        "name": "title",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/courses/{id}": {
            "delete": {
                "description": "Delete Courses from DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Delete Course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/planguages/": {
            "post": {
                "description": "Adds Programming Language Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Programming Language"
                ],
                "summary": "Add Programming Language",
                "parameters": [
                    {
                        "description": "New Programming Language",
                        "name": "newPLanguage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddPLanguageDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates Programming Language Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Programming Language"
                ],
                "summary": "Update Programming Language",
                "parameters": [
                    {
                        "description": "Update Programming Language",
                        "name": "updatePLanguage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePLanguageDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/planguages/{id}": {
            "delete": {
                "description": "Delete Programming Languages from DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Programming Language"
                ],
                "summary": "Delete Programming Language",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Programming Language ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/rewards/": {
            "post": {
                "description": "Adds Reward Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reward"
                ],
                "summary": "Add Reward",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Reward Image File",
                        "name": "imageFile",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "Description",
                        "in": "formData"
                    },
                    {
                        "maxLength": 30,
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "sellerFee",
                        "in": "formData"
                    },
                    {
                        "maxLength": 30,
                        "type": "string",
                        "name": "symbol",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates Reward Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reward"
                ],
                "summary": "Update Reward",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 30,
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "maxLength": 30,
                        "type": "string",
                        "name": "symbol",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Course Image File",
                        "name": "imageFile",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/rewards/{id}": {
            "delete": {
                "description": "Delete Rewards from DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reward"
                ],
                "summary": "Delete Reward",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reward ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/tests/": {
            "post": {
                "description": "Adds Test Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Add Test",
                "parameters": [
                    {
                        "description": "New Test",
                        "name": "newTest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddTestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates tests Into DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Update Test",
                "parameters": [
                    {
                        "description": "Update Test",
                        "name": "updateTest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateTestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/tests/{id}": {
            "delete": {
                "description": "Delete tests from DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Delete Test",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Taest ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "description": "Retrieves all users based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get All Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User's Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/attributes/": {
            "get": {
                "description": "Retrieves all attribute based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attributes"
                ],
                "summary": "Get All Attributes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attribute ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Reward ID",
                        "name": "rewardID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "TraitType of Attribute",
                        "name": "traitType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/attributes/{id}": {
            "get": {
                "description": "Retrieves spesific Attribute based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attributes"
                ],
                "summary": "Get One Attribute",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attribute ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/chapters/": {
            "get": {
                "description": "Retrieves all chapters based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapters"
                ],
                "summary": "Get All Chapters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chapter ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Language ID",
                        "name": "languageID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Reward ID",
                        "name": "rewardID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Chapter Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Grants Experience",
                        "name": "grantsExp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/chapters/compilerNames": {
            "get": {
                "description": "Gets Programming Names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Codex-Compiler"
                ],
                "summary": "Gets Programming Names",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/chapters/run": {
            "post": {
                "description": "Runs Chapter Code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapters"
                ],
                "summary": "Run Chapter",
                "parameters": [
                    {
                        "description": "Runs Chapter's Code",
                        "name": "runChapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RunChapter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/chapters/{id}": {
            "get": {
                "description": "Retrieves spesific chapters based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapters"
                ],
                "summary": "Get One Chapter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chapter ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/compiler/template": {
            "post": {
                "description": "This is a template for an endpoint created to make requests to Codex-Compiler.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Codex-Compiler"
                ],
                "summary": "Run Template",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/courses/": {
            "get": {
                "description": "Retrieves all courses based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Get All Courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Language ID",
                        "name": "languageID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Programming Language ID",
                        "name": "pLanguageID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Course Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/courses/popular": {
            "get": {
                "description": "Retrieves all popular courses.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Get All Popular Courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/courses/start": {
            "post": {
                "description": "Starts the spesific course.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Starts Course",
                "parameters": [
                    {
                        "description": "Start Course",
                        "name": "startCourse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StartCourseDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/courses/{id}": {
            "get": {
                "description": "Retrieves one course.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Get Course By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Chapter Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Chapter Attribute Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/language/": {
            "get": {
                "description": "Retrieves all languages based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language"
                ],
                "summary": "Get All Languages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/planguages/": {
            "get": {
                "description": "Retrieves all Programming languages based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Programming Language"
                ],
                "summary": "Get All Programming Languages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Programming Language ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Language ID",
                        "name": "languageID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Programming Language Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/planguages/{id}": {
            "get": {
                "description": "Retrieves spesific Programming languages based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Programming Language"
                ],
                "summary": "Get One Programming Language By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Programming Language ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/rewards/": {
            "get": {
                "description": "Retrieves all rewards based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reward"
                ],
                "summary": "Get All Rewards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reward ID",
                        "name": "rewardID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Reward Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Reward Symbol",
                        "name": "symbol",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/rewards/{id}": {
            "get": {
                "description": "Retrieves one reward.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reward"
                ],
                "summary": "Get Reward By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reward ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Reward Attribute Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Reward Attribute Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/tests/": {
            "get": {
                "description": "Retrieves all tests based on the provided query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Get All tests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Test ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Chapter ID",
                        "name": "chapterID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/user/connect": {
            "post": {
                "description": "Connects Wallet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Connect Wallet To User",
                "parameters": [
                    {
                        "description": "New User Wallet",
                        "name": "newWallet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthWallet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/user/mint/{rewardID}": {
            "post": {
                "description": "Mint your NFT.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Mint NFT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reward ID",
                        "name": "rewardID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/user/profile": {
            "get": {
                "description": "Retrieves users profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates users profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "description": "New User Profile",
                        "name": "newUserProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfileUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/user/streak": {
            "post": {
                "description": "+ your streak and gain exp.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Streak Up",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/register": {
            "post": {
                "description": "Register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Register",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRegisterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/rewards/metadata/{id}": {
            "get": {
                "description": "Retrieves one reward.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Reward By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reward ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/wallet": {
            "post": {
                "description": "Auth Wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Auth Wallet",
                "parameters": [
                    {
                        "description": "Wallet",
                        "name": "wallet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthWallet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddAttributeDTO": {
            "type": "object",
            "required": [
                "rewardID",
                "traitType",
                "value"
            ],
            "properties": {
                "rewardID": {
                    "type": "string"
                },
                "traitType": {
                    "type": "string",
                    "maxLength": 30
                },
                "value": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "dto.AddChapterDTO": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "courseID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dockerTemplate": {
                    "type": "string"
                },
                "frontendTemplate": {
                    "type": "string"
                },
                "funcName": {
                    "type": "string"
                },
                "languageID": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "rewardID": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.AddPLanguageDTO": {
            "type": "object",
            "required": [
                "fileExtention",
                "monacoEditor",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileExtention": {
                    "type": "string",
                    "maxLength": 30
                },
                "languageID": {
                    "type": "string"
                },
                "monacoEditor": {
                    "type": "string",
                    "maxLength": 30
                },
                "name": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "dto.AddTestDTO": {
            "type": "object",
            "required": [
                "chapterID"
            ],
            "properties": {
                "chapterID": {
                    "type": "string"
                },
                "inputValue": {
                    "type": "string"
                },
                "outputValue": {
                    "type": "string"
                }
            }
        },
        "dto.RunChapter": {
            "type": "object",
            "required": [
                "chapterID",
                "courseID"
            ],
            "properties": {
                "chapterID": {
                    "type": "string"
                },
                "courseID": {
                    "type": "string"
                },
                "userCode": {
                    "type": "string"
                }
            }
        },
        "dto.StartCourseDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateAttributeDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "rewardID": {
                    "type": "string"
                },
                "traitType": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateChapterDTO": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "courseID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dockerTemplate": {
                    "type": "string"
                },
                "frontendTemplate": {
                    "type": "string"
                },
                "funcName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languageID": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "rewardID": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.UpdatePLanguageDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileExtention": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languageID": {
                    "type": "string"
                },
                "monacoEditor": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateTestDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "inputValue": {
                    "type": "string"
                },
                "outputValue": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuthWallet": {
            "type": "object",
            "required": [
                "message",
                "publicKeyBase58",
                "signatureBase58"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "publicKeyBase58": {
                    "type": "string"
                },
                "signatureBase58": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginDTO": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "dto.UserProfileUpdateDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 30
                },
                "surname": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "dto.UserRegisterDTO": {
            "type": "object",
            "required": [
                "ConfirmPassword",
                "email",
                "name",
                "password",
                "surname",
                "username"
            ],
            "properties": {
                "ConfirmPassword": {
                    "type": "string",
                    "minLength": 8
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "surname": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 3
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "response.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataCount": {
                    "type": "integer"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "session_id",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API Service",
	Description:      "API Service for Codex",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
